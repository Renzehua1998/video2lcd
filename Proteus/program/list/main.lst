C51 COMPILER V9.00   MAIN                                                                  06/19/2016 09:42:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\hex\main.obj
COMPILER INVOKED BY: G:\Program Files\keil51\C51\BIN\C51.EXE ..\main.c BROWSE DEBUG OBJECTEXTEND PRINT(..\list\main.lst)
                    - OBJECT(..\hex\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "SD.h"
   3          unsigned long  SD_ADDR=0;
   4          unsigned int count;
   5          unsigned char xdata DATA[512];
   6          sbit E = P2^0;
   7          sbit RW = P2^1;
   8          sbit RS = P2^2;
   9          sbit CS2 = P2^3;
  10          sbit CS1 = P2^4;        //端口定义
  11          #define DataPort P0
  12           /*12864判忙 */
  13          bit Chek_Busy(void)
  14          {
  15   1          DataPort = 0xff;
  16   1          RW = 1;
  17   1          RS = 0;
  18   1          E = 1;
  19   1          E = 0;
  20   1          return (bit)(DataPort & 0x80);
  21   1      }
  22          /*------------------------------------------------
  23                      选屏
  24          i:0是左屏,1是右屏,2全屏
  25          ------------------------------------------------*/
  26          void Choose_12864(unsigned char i)
  27          {                                                
  28   1         switch (i)                    
  29   1         {
  30   2             case 0: CS1 = 0;CS2 = 1;break;   
  31   2             case 1: CS1 = 1;CS2 = 0;break;
  32   2             case 2: CS1 = 0;CS2 = 0;break;
  33   2                 default: break;
  34   2         }
  35   1      }
  36          /*------------------------------------------------
  37                  写命令
  38          ------------------------------------------------*/
  39          void LCD_Cmd(unsigned char cmd)
  40          {
  41   1          while(Chek_Busy());
  42   1          RW = 0;              
  43   1          RS = 0;
  44   1          DataPort = cmd;
  45   1          E = 1;
  46   1          E = 0;          
  47   1      }
  48          /*------------------------------------------------
  49                  读LCD
  50          ------------------------------------------------*/
  51          unsigned char LCD_Read()
  52          {
  53   1          unsigned char read_data;
  54   1          while(Chek_Busy());
C51 COMPILER V9.00   MAIN                                                                  06/19/2016 09:42:43 PAGE 2   

  55   1          RW = 1;//需进行一次空读
  56   1          RS = 1;
  57   1          E = 1;
  58   1          E = 0;
  59   1      
  60   1          RW = 1;
  61   1          RS = 1;
  62   1          E = 1;
  63   1          read_data = DataPort;
  64   1          E = 0;        
  65   1          return (read_data);    
  66   1      }
  67          /*------------------------------------------------
  68                  写数据
  69          ------------------------------------------------*/
  70          void  LCD_Data(unsigned char dat)
  71          {
  72   1          while(Chek_Busy());
  73   1          RW = 0;              
  74   1          RS = 1;
  75   1          DataPort = dat;
  76   1          E = 1;
  77   1          E = 0; 
  78   1      }
  79          /*------------------------------------------------
  80                       设置地址
  81          PAGE:0-7;
  82          Y_Address:0-63
  83          ------------------------------------------------*/
  84          void Set_PageY(unsigned char PAGE,unsigned char Y_Address)
  85          {
  86   1          LCD_Cmd(0xB8 + PAGE);
  87   1          LCD_Cmd(0x40 + Y_Address);
  88   1      }
  89          /*------------------------------------------------
  90                          清屏
  91          ------------------------------------------------*/
  92          void LCD_Clear(void)
  93          {
  94   1          unsigned char page,row;
  95   1          Choose_12864(2);
  96   1          for (page = 0xb8; page < 0xc0; page ++)
  97   1          {
  98   2              LCD_Cmd(page);
  99   2              LCD_Cmd(0x40);
 100   2              for (row = 0; row < 64; row ++)
 101   2              {
 102   3                  LCD_Data(0x00);//对12864所有地址全部写零
 103   3              }
 104   2          }
 105   1      }
 106          /*------------------------------------------------
 107                         初始化
 108          ------------------------------------------------*/
 109          void LCD_Init(void)
 110          {
 111   1          CS2 = 0;
 112   1          CS1 = 0;
 113   1          LCD_Cmd(0x3F);//开显示
 114   1      }
 115          /*-------------------------------------------------
 116              显示一幅12864图片
C51 COMPILER V9.00   MAIN                                                                  06/19/2016 09:42:43 PAGE 3   

 117          -------------------------------------------------*/
 118          void Dis_Picture(unsigned char *picture)
 119          {
 120   1          unsigned char ii,kk;
 121   1          for (kk = 0; kk < 4; kk ++)//LCD共分7=8页
 122   1          {
 123   2              Choose_12864(2);
 124   2              Set_PageY(kk,0);
 125   2              Choose_12864(0);        
 126   2              for (ii = 0; ii < 128; ii ++)
 127   2              {
 128   3                  LCD_Data(*picture);
 129   3                  picture ++;
 130   3                  if (ii == 63)
 131   3                  {
 132   4                      Choose_12864(1);
 133   4                  }
 134   3              }
 135   2          }
 136   1      }
 137          void Dis_Pictureb(unsigned char *picture)
 138          {
 139   1          unsigned char ii,kk;
 140   1          for (kk = 4; kk < 8; kk ++)//LCD共分7=8页
 141   1          {
 142   2              Choose_12864(2);
 143   2              Set_PageY(kk,0);
 144   2              Choose_12864(0);        
 145   2              for (ii = 0; ii < 128; ii ++)
 146   2              {
 147   3                  LCD_Data(*picture);
 148   3                  picture ++;
 149   3                  if (ii == 63)
 150   3                  {
 151   4                      Choose_12864(1);
 152   4                  }
 153   3              }
 154   2          }
 155   1      }
 156          void delayus(unsigned char t)
 157          {
 158   1          while(--t);
 159   1      }
 160          void delayms(unsigned char t)
 161          {
 162   1          while(t--)
 163   1          {
 164   2              delayus(245);
 165   2              delayus(245);
 166   2          }
 167   1      }
 168          void main(void)
 169          {
 170   1          char bb;
 171   1          bb=0;
 172   1          LCD_Init();
 173   1          LCD_Clear();
 174   1          SdInit();
 175   1          DATA[0]=255;;
 176   1          DATA[1]=1;
 177   1          DATA[2]=2;
 178   1          DATA[3]=3;
C51 COMPILER V9.00   MAIN                                                                  06/19/2016 09:42:43 PAGE 4   

 179   1          DATA[511]=0xf0;
 180   1          //SdWriteBlock(DATA,2,512);
 181   1          while(1)
 182   1          {
 183   2              for(count=0;count<1093;count++)
 184   2              {
 185   3                  while(!SdReadBlock(DATA,SD_ADDR,512));
 186   3                  SD_ADDR+=512;
 187   3                  Dis_Picture(DATA);
 188   3                  while(!SdReadBlock(DATA,SD_ADDR,512));
 189   3                  Dis_Pictureb(DATA);
 190   3                  SD_ADDR+=512;
 191   3                  delayms(50);
 192   3                  bb++;
 193   3                }
 194   2           SD_ADDR=0;
 195   2          }
 196   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    453    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    512    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
